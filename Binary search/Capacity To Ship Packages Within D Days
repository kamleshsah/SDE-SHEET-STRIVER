'''
https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/
'''
class Solution:
    def shipWithinDays(self, weights: List[int], days: int) -> int:
        def is_feasible(weights,mid,k):
            day=1
            i=0
            sum_=0
            while i<len(weights):
                if sum_+weights[i]>mid:
                    day+=1
                    sum_=weights[i]
                else:
                    sum_+=weights[i]
                i+=1
            return day<=k

        low=max(weights)
        high=sum(weights)
        ans=0
        while low<=high:
            mid=(low+high)//2
            if is_feasible(weights,mid,days):
                ans=mid
                high=mid-1
            else:
                low=mid+1
        return ans
