'''
https://leetcode.com/problems/majority-element-ii/
'''

**** Approach 1**** TC : O(N) || SC : O(N) || Using Dictionary DS

class Solution:
    def majorityElement(self, nums: List[int]) -> List[int]:
        d={}
        val=floor(len(nums)/3)
        for i in nums:
            d[i]=d.get(i,0)+1
            
        ans=[]
        
        for i in d:
            if d[i]>val:
                ans.append(i)
        return ans
        
**** Approach 2****(Extended of Moore's Voting Algorithm)****

class Solution:
    def majorityElement(self, nums: List[int]) -> List[int]:
        val=floor(len(nums)/3)
        ans=[]
        count1,count2,num1,num2=0,0,-1,-1
        
        for i in range(len(nums)):
            if nums[i]==num1:
                count1+=1
            elif nums[i]==num2:
                count2+=1
            elif count1==0:
                num1=nums[i]
                count1=1
            elif count2==0:
                num2=nums[i]
                count2=1
            else:
                count1-=1
                count2-=1
        
        count1,count2=0,0
        
        for i in range(len(nums)):
            if nums[i]==num1:
                count1+=1
            elif nums[i]==num2:
                count2+=1

        if count1 > val:
            ans.append(num1)
        if count2 > val:
            ans.append(num2)
        
        return ans
